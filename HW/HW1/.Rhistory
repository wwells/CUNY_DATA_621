shiny::runApp('~/shiny-apps/gunviolence')
playbill <- read.csv('http://www.stat.tamu.edu/~sheather/book/docs/datasets/playbill.csv')
View(playbill)
View(playbill)
?lm
View(playbill)
mod <- lm(CurrentWeek ~ LastWeek, playbill)
mod
summary(mod)
mod <- lm(CurrentWeek ~ LastWeek, playbill)
summary(mod)
confit(mod)
Bo <- 10000
mod <- lm(CurrentWeek ~ LastWeek, playbill)
summary(mod)
confint(mod)
Bo <- 10000
anova(mod)
View(playbill)
?anova
predict(mod, 400000)
predict(400000, mod)
?predict
predict(mod, data.frame(LastWeek=c(400000)), interval="confidence",level=0.95)
predict(mod, data.frame(LastWeek=c(400000)), interval="confidence",level=0.95)
predict(mod, data.frame(LastWeek=c(400000)), interval="prediction",level=0.95)
predict(mod, data.frame(LastWeek=c(400000)), interval="prediction",level=0.95)
cov(playbill)
cov(playbill[2:3,])
cov(playbill[,2:3])
plot(playbill$CurrentWeek, playbill$LastWeek)
plot(pplaybill$LastWeek, laybill$CurrentWeek)
plot(playbill$LastWeek, playbill$CurrentWeek)
abline(mod)
9.821e-01
-1.424433e+04
6.805e+03
predict(mod, data.frame(LastWeek=c(400000)), interval="confidence",level=0.95)
indi <- read.csv('http://www.stat.tamu.edu/~sheather/book/docs/datasets/indicators.txt')
View(indi)
indi <- read.csv('http://www.stat.tamu.edu/~sheather/book/docs/datasets/indicators.txt', sep=' ')
indi <- read.table('http://www.stat.tamu.edu/~sheather/book/docs/datasets/indicators.txt')
View(indi)
indi <- read.table('http://www.stat.tamu.edu/~sheather/book/docs/datasets/indicators.txt', header = T)
View(indi)
View(indi)
mod2 <- lm(PriceChange ~ LoanPaymentsOverdue, indi)
summary(mod2)
mod2 <- lm(PriceChange ~ LoanPaymentsOverdue, indi)
summary(mod2)
plot(indi$PriceChange, indi$LoanPaymentsOverdue)
abline(mod2)
mod2 <- lm(PriceChange ~ LoanPaymentsOverdue, indi)
summary(mod2)
plot(indi$LoanPaymentsOverdue, indi$PriceChange)
abline(mod2)
confint(mod2)
confint(mod2)
?confint
confint(mod2)
predict(mod, data.frame(LoanPaymentsOverdue=c(4)), interval="confidence",level=0.95)
confint(mod2)
predict(mod2, data.frame(LoanPaymentsOverdue=c(4)), interval="confidence",level=0.95)
data(prostate)
if (!require('faraway')) install.packages('faraway')
data(prostate)
prostate
View(prostate)
?abline
data(prostate)
m1 <- lm(lpsa ~ lcavol, prostate)
m2 <- lm(lcavol ~ lpsa, prostate)
plot(prostate$lpsa, prostate(lcavol))
data(prostate)
m1 <- lm(lpsa ~ lcavol, prostate)
m2 <- lm(lcavol ~ lpsa, prostate)
plot(prostate$lpsa, prostate$lcavol)
abline(m1, lty=2)
abline(m2, lty=1)
data(prostate)
m1 <- lm(lpsa ~ lcavol, prostate)
m2 <- lm(lpsa ~ lcavol + lweight, prostate)
data(prostate)
m1 <- lm(lpsa ~ lcavol, prostate)
m2 <- lm(lpsa ~ lcavol + lweight, prostate)
m3 <- lm(lpsa ~ lcavol + lweight + svi, prostate)
m4 <- lm(lpsa ~ lcavol + lweight + svi + lbph, prostate)
m5 <- lm(lpsa ~ lcavol + lweight + svi + lbph + age, prostate)
data(prostate)
m1 <- lm(lpsa ~ lcavol, prostate)
m2 <- lm(lpsa ~ lcavol + lweight, prostate)
m3 <- lm(lpsa ~ lcavol + lweight + svi, prostate)
m4 <- lm(lpsa ~ lcavol + lweight + svi + lbph, prostate)
m5 <- lm(lpsa ~ lcavol + lweight + svi + lbph + age, prostate)
m6 <- lm(lpsa ~ lcavol + lweight + svi + lbph + age + lcp, prostate)
data(prostate)
m1 <- lm(lpsa ~ lcavol, prostate)
m2 <- lm(lpsa ~ lcavol + lweight, prostate)
m3 <- lm(lpsa ~ lcavol + lweight + svi, prostate)
m4 <- lm(lpsa ~ lcavol + lweight + svi + lbph, prostate)
m5 <- lm(lpsa ~ lcavol + lweight + svi + lbph + age, prostate)
m6 <- lm(lpsa ~ lcavol + lweight + svi + lbph + age + lcp, prostate)
m7 <- lm(lpsa ~ lcavol + lweight + svi + lbph + age + lcp +
pgg45, prostate)
m8 <- lm(lpsa ~ lcavol + lweight + svi + lbph + age + lcp +
pgg45 + gleason, prostate)
df <- data.frame()
for (i in 1:8) {
l <- paste("m", i)
}
df <- data.frame()
l <- c()
for (i in 1:8) {
l_new <- paste0("m", i)
l <- c(l, l_new)
}
m1$coefficients
m1$residuals
m1$fitted.values
m1$xlevels
m1$qr
m1$call
m1$df.residual
df <- data.frame()
l <- c()
for (i in 1:8) {
l_new <- paste0("m", i)
l <- c(l, l_new)
}
for (mod in l) {
print(summary(mod)$r.squared))
m <- get("m1")
df <- data.frame()
l <- c()
for (i in 1:8) {
l_new <- paste0("m", i)
l <- c(l, l_new)
}
for (mod in l) {
print(summary(get(mod))$r.squared))
summary(m1)$r.squared
summary(get("m1"))$r.squared
df <- data.frame()
l <- c()
for (i in 1:8) {
l_new <- paste0("m", i)
l <- c(l, l_new)
}
for (mod in l) {
print(summary(get(mod))$r.squared)
}
df <- data.frame()
l <- c()
for (i in 1:8) {
l_new <- paste0("m", i)
l <- c(l, l_new)
}
for (mod in l) {
print(summary(get(mod))$r.squared)
}
df <- data.frame()
l <- c()
for (i in 1:8) {
l_new <- paste0("m", i)
l <- c(l, l_new)
}
for (mod in l) {
r2 <- summary(get(mod))$r.squared
rbind(df, c(r2))
}
View(df)
df <- data.frame()
l <- c()
for (i in 1:8) {
l_new <- paste0("m", i)
l <- c(l, l_new)
}
for (mod in l) {
r2 <- summary(get(mod))$r.squared
df <- rbind(df, c(r2))
}
View(df)
df <- data.frame()
l <- c()
for (i in 1:8) {
l_new <- paste0("m", i)
l <- c(l, l_new)
}
for (mod in l) {
r2 <- summary(get(mod))$r.squared
df <- rbind(df, c(model = mod, "R^2" = r2))
}
df <- data.frame()
l <- c()
for (i in 1:8) {
l_new <- paste0("m", i)
l <- c(l, l_new)
}
for (mod in l) {
r2 <- summary(get(mod))$r.squared
df <- rbind(df, c(model = mod, R2 = r2))
}
View(df)
df <- data.frame()
l <- c()
for (i in 1:8) {
l_new <- paste0("m", i)
l <- c(l, l_new)
}
for (mod in l) {
r2 <- summary(get(mod))$r.squared
df <- rbind(df, c(m = mod, R2 = r2))
}
View(df)
summary(m1)
x <- summary(m1)
x$residuals
x
x$sigma
df <- data.frame()
l <- c()
for (i in 1:8) {
l_new <- paste0("m", i)
l <- c(l, l_new)
}
for (mod in l) {
r2 <- summary(get(mod))$r.squared
rse <- summary(get(mod))$sigma
df <- rbind(df, c(R2 = r2, RSE = rse))
}
View(df)
View(df)
df <- data.frame()
names(df) <- c("R2", "RSE")
df <- data.frame()
l <- c()
for (i in 1:8) {
l_new <- paste0("m", i)
l <- c(l, l_new)
}
for (mod in l) {
r2 <- summary(get(mod))$r.squared
rse <- summary(get(mod))$sigma
df <- rbind(df, c(R2 = r2, RSE = rse))
}
names(df) <- c("R2", "RSE")
View(df)
df <- data.frame()
l <- c()
for (i in 1:8) {
l_new <- paste0("m", i)
l <- c(l, l_new)
}
for (mod in l) {
r2 <- summary(get(mod))$r.squared
rse <- summary(get(mod))$sigma
df <- rbind(df, c(R2 = r2, RSE = rse))
}
names(df) <- c("R2", "RSE")
plot(df$RSE)
plot(df$RSE, type="l")
lines(df$R2)
View(df)
seq(1, 3, 10)
seq(10, 3, 10)
seq(10, 3, 10)
?seq
seq(0, 1, 10)
seq(1, 8 ,1)
df <- data.frame()
l <- c()
for (i in 1:8) {
l_new <- paste0("m", i)
l <- c(l, l_new)
}
for (mod in l) {
r2 <- summary(get(mod))$r.squared
rse <- summary(get(mod))$sigma
df <- rbind(df, c(R2 = r2, RSE = rse))
}
names(df) <- c("R2", "RSE")
df$X <- seq(1, 8,1)
View(df)
require(ggplot2)
ggplot(df, aes(X)) +
geom_line(aes(y=R2), colour="blue") +
geom_line(aes(y=RSE), colour="red")
ggplot(df, aes(X)) +
geom_line(aes(y=R2), colour="blue") +
geom_line(aes(y=RSE), colour="red") +
cale_colour_manual("",
breaks = c("R2", "RSE"),
values = c("blue", "red"))
ggplot(df, aes(X)) +
geom_line(aes(y=R2), colour="blue") +
geom_line(aes(y=RSE), colour="red") +
scale_colour_manual("",
breaks = c("R2", "RSE"),
values = c("blue", "red"))
ggplot(df, aes(X)) +
geom_line(aes(y=R2), colour="R2") +
geom_line(aes(y=RSE), colour="RSE") +
scale_colour_manual("",
breaks = c("R2", "RSE"),
values = c("blue", "red"))
ggplot(df, aes(X)) +
geom_line(aes(y=R2, colour="R2")) +
geom_line(aes(y=RSE, colour="RSE")) +
scale_colour_manual("",
breaks = c("R2", "RSE"),
values = c("blue", "red"))
ggplot(df, aes(X)) +
geom_line(aes(y=R2, colour="R2")) +
geom_line(aes(y=RSE, colour="RSE")) +
scale_colour_manual("",
breaks = c("R2", "RSE"),
values = c("blue", "red")) +
labs(title="R^2 v RSE as Features are Added to Model",
ylab="")
?lab
?labs
ggplot(df, aes(X)) +
geom_line(aes(y=R2, colour="R2")) +
geom_line(aes(y=RSE, colour="RSE")) +
scale_colour_manual("",
breaks = c("R2", "RSE"),
values = c("blue", "red")) +
labs(title="R^2 v RSE as Features are Added to Model",
y="")
library(updateR)
install.packages("DataExplorer")
if (!require(ggplot2)) (install.packages(ggplot2))
if (!require(reshape)) (install.packages(reshape))
if (!require(MASS)) (install.packages(MASS))
if (!require(dplyr)) (install.packages(dplyr))
if (!require(gvlma)) (install.packages(gvlma))
if (!require(faraway)) (install.packages(faraway))
if (!require(mgcv)) (install.packages(mgcv))
if (!require(DataExplorer)) (install.packages(DataExplorer))
theme_update(plot.title = element_text(hjust = 0.5),
axis.text.x = element_text(angle = 90, hjust = 1))
train <- read.csv('Data/moneyball-training-data.csv', header=T)
train$INDEX <- NULL
test <- read.csv('Data/moneyball-evaluation-data.csv', header=T)
test$INDEX <- NULL
cleanNames <- function(df) {
name_list <- names(df)
name_list <- gsub("TEAM_", "", name_list)
names(df) <- name_list
df
}
train <- cleanNames(train)
test <- cleanNames(test)
install.packages("reshape")
if (!require(ggplot2)) (install.packages(ggplot2))
if (!require(reshape)) (install.packages(reshape))
if (!require(MASS)) (install.packages(MASS))
if (!require(dplyr)) (install.packages(dplyr))
if (!require(gvlma)) (install.packages(gvlma))
if (!require(faraway)) (install.packages(faraway))
if (!require(mgcv)) (install.packages(mgcv))
if (!require(DataExplorer)) (install.packages(DataExplorer))
theme_update(plot.title = element_text(hjust = 0.5),
axis.text.x = element_text(angle = 90, hjust = 1))
train <- read.csv('Data/moneyball-training-data.csv', header=T)
train$INDEX <- NULL
test <- read.csv('Data/moneyball-evaluation-data.csv', header=T)
test$INDEX <- NULL
cleanNames <- function(df) {
name_list <- names(df)
name_list <- gsub("TEAM_", "", name_list)
names(df) <- name_list
df
}
train <- cleanNames(train)
test <- cleanNames(test)
install.packages("dplyr")
install.packages("gvlma")
install.packages("faraway")
?create_report
create_report(train)
create_report(test, 'eda.html')
create_report(test, 'eda.html')
create_report(test, 'eda.html', output_dir=getwd(),html_document(toc=TRUE))
setwd("~/Dropbox/CUNY/DATA-621_BusinessAnalystics_and_DataMining/HW/HW1")
create_report(test, 'eda.html', output_dir=getwd(),html_document(toc=TRUE))
plot_str(train)
plot_histogram(train)
plot_density(train)
plot_bar(train)
create_report(train)
